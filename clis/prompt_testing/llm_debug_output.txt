/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
---
jupytext:
  text_representation:
    extension: .md
    format_name: myst
    format_version: 0.13
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 1, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
---
jupytext:
  text_representation:
    extension: .md
    format_name: myst
    format_version: 0.13
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3
---
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
---
jupytext:
  text_representation:
    extension: .md
    format_name: myst
    format_version: 0.13
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3
---
</document>
<translated>

---
jupytext:
  text_representation:
    extension: .md
    format_name: myst
    format_version: 0.13
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3
---
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384a", "locked": true, "schema_version": 3, "solution": false}}

# Manipuler des images

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384b", "locked": true, "schema_version": 3, "solution": false, "task": false}}

Dans cette feuille, vous allez apprendre Ã  effectuer quelques
manipulations et traitements simples sur les images.  Nous allons
commencer par nous entraÃ®ner sur une image riche en couleurs (source:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 2, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384a", "locked": true, "schema_version": 3, "solution": false}}

# Manipuler des images

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384b", "locked": true, "schema_version": 3, "solution": false, "task": false}}

In this sheet, you will learn to perform some
simple manipulations and treatments on images. We will
start by practicing on a colorful image (source:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384a", "locked": true, "schema_version": 3, "solution": false}}

# Manipuler des images

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384b", "locked": true, "schema_version": 3, "solution": false, "task": false}}

Dans cette feuille, vous allez apprendre Ã  effectuer quelques
manipulations et traitements simples sur les images.  Nous allons
commencer par nous entraÃ®ner sur une image riche en couleurs (source:
</document>
<translated>

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384a", "locked": true, "schema_version": 3, "solution": false}}

# Manipuler des images

+++ {"nbgrader": {"grade": false, "grade_id": "cell-19c6eb4994e2384b", "locked": true, "schema_version": 3, "solution": false, "task": false}}

In this sheet, you will learn to perform some
simple manipulations and treatments on images. We will
start by practicing on a colorful image (source:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
[wikimedia](https://commons.wikimedia.org/wiki/File:Apple_icon_2.png)):

:::{figure} media/apple.png
:alt: media/apple.png
:width: 40px
:align: center
:::

Pour cela, nous la chargeons avec la bibliothÃ¨que `PIL` (Python
Imaging Library) en prÃ©cisant le nom du fichier la contenant, puis
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 3, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
[wikimedia](https://commons.wikimedia.org/wiki/File:Apple_icon_2.png)):

:::{figure} media/apple.png
:alt: media/apple.png
:width: 40px
:align: center
:::

For this, we load it with the `PIL` (Python
Imaging Library) library specifying the name of the file containing it, then
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
[wikimedia](https://commons.wikimedia.org/wiki/File:Apple_icon_2.png)):

:::{figure} media/apple.png
:alt: media/apple.png
:width: 40px
:align: center
:::

Pour cela, nous la chargeons avec la bibliothÃ¨que `PIL` (Python
Imaging Library) en prÃ©cisant le nom du fichier la contenant, puis
</document>
<translated>

[wikimedia](https://commons.wikimedia.org/wiki/File:Apple_icon_2.png)):

:::{figure} media/apple.png
:alt: media/apple.png
:width: 40px
:align: center
:::

For this, we load it with the `PIL` (Python
Imaging Library) library specifying the name of the file containing it, then
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
l'affectons Ã  une variable `img` pour pouvoir la manipuler par la
suite:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-38a01921463de697
  locked: true
  schema_version: 3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 4, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
l'affectons Ã  une variable `img` pour pouvoir la manipuler par la
suite:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-38a01921463de697
  locked: true
  schema_version: 3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
l'affectons Ã  une variable `img` pour pouvoir la manipuler par la
suite:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-38a01921463de697
  locked: true
  schema_version: 3
</document>
<translated>

l'affectons Ã  une variable `img` pour pouvoir la manipuler par la
suite:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-38a01921463de697
  locked: true
  schema_version: 3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  solution: false
---
from PIL import Image
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-b5659c2e482c3848
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 5, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  solution: false
---
from PIL import Image
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-b5659c2e482c3848
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  solution: false
---
from PIL import Image
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-b5659c2e482c3848
</document>
<translated>

  solution: false
---
from PIL import Image
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-b5659c2e482c3848
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  schema_version: 3
  solution: false
---
img = Image.open("media/apple.png")
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-e75aecf3bd8946db", "locked": true, "schema_version": 3, "solution": false}}

Voici cette image:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 6, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  schema_version: 3
  solution: false
---
img = Image.open("media/apple.png")
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-e75aecf3bd8946db", "locked": true, "schema_version": 3, "solution": false}}

Here is this image:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  schema_version: 3
  solution: false
---
img = Image.open("media/apple.png")
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-e75aecf3bd8946db", "locked": true, "schema_version": 3, "solution": false}}

Voici cette image:
</document>
<translated>

  locked: true
  schema_version: 3
  solution: false
---
img = Image.open("media/apple.png")
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-e75aecf3bd8946db", "locked": true, "schema_version": 3, "solution": false}}

Here is this image:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-5f412c59d2396365
  locked: true
  schema_version: 3
  solution: false
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 7, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-5f412c59d2396365
  locked: true
  schema_version: 3
  solution: false
---
</document>
<translated>

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
img
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-450a9499627740e6", "locked": true, "schema_version": 3, "solution": false}}

Pour l'afficher avec des axes et -- lorsque l'image a une basse
rÃ©solution -- mieux repÃ©rer les pixels individuels, on peut utiliser
`matplotlib`:

```{code-cell} ipython3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 8, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
img
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-450a9499627740e6", "locked": true, "schema_version": 3, "solution": false}}

To display it with axes and -- when the image has a low
resolution -- better identify individual pixels, you can use
`matplotlib`:

```{code-cell} ipython3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
img
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-450a9499627740e6", "locked": true, "schema_version": 3, "solution": false}}

Pour l'afficher avec des axes et -- lorsque l'image a une basse
rÃ©solution -- mieux repÃ©rer les pixels individuels, on peut utiliser
`matplotlib`:

```{code-cell} ipython3
</document>
<translated>

img
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-450a9499627740e6", "locked": true, "schema_version": 3, "solution": false}}

To display it with axes and -- when the image has a low
resolution -- better identify individual pixels, you can use
`matplotlib`:

```{code-cell} ipython3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef35
  locked: true
  schema_version: 3
  solution: false
---
import matplotlib.pyplot as plt
```
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 9, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef35
  locked: true
  schema_version: 3
  solution: false
---
import matplotlib.pyplot as plt
```
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef35
  locked: true
  schema_version: 3
  solution: false
---
import matplotlib.pyplot as plt
```
</document>
<translated>

---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef35
  locked: true
  schema_version: 3
  solution: false
---
import matplotlib.pyplot as plt
```</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef36
  locked: true
  schema_version: 3
  solution: false
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 10, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef36
  locked: true
  schema_version: 3
  solution: false
---
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef36
  locked: true
  schema_version: 3
  solution: false
---
</document>
<translated>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1b1461380b6fef36
  locked: true
  schema_version: 3
  solution: false
---
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
plt.imshow(img);
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-b74d7516557d88dd", "locked": true, "schema_version": 3, "solution": false, "task": false}}

:::{hint} Interfaces traditionnelle et objet de matplotlib

Pourquoi un `;` Ã  la fin de la commande prÃ©cÃ©dente?  Parce que
`plt.imshow` ne renvoie pas une image, mais l'affiche par effet de
bord. Le `;` Ã©vite l'affichage de ce que renvoie vraiment `plt.imshow`
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 11, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
plt.imshow(img);
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-b74d7516557d88dd", "locked": true, "schema_version": 3, "solution": false, "task": false}}

:::{hint} Traditional interface and object of matplotlib

Why a `;` at the end of the previous command? Because
`plt.imshow` doesn't return an image, but displays it as a side effect. The `;` prevents the display of what `plt.imshow` actually returns
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
plt.imshow(img);
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-b74d7516557d88dd", "locked": true, "schema_version": 3, "solution": false, "task": false}}

:::{hint} Interfaces traditionnelle et objet de matplotlib

Pourquoi un `;` Ã  la fin de la commande prÃ©cÃ©dente?  Parce que
`plt.imshow` ne renvoie pas une image, mais l'affiche par effet de
bord. Le `;` Ã©vite l'affichage de ce que renvoie vraiment `plt.imshow`
</document>
<translated>

plt.imshow(img);
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-b74d7516557d88dd", "locked": true, "schema_version": 3, "solution": false, "task": false}}

:::{hint} Traditional interface and object of matplotlib

Why a `;` at the end of the previous command? Because
`plt.imshow` doesn't return an image, but displays it as a side effect. The `;` prevents the display of what `plt.imshow` actually returns
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
(un objet de type figure).

Cette approche quelque peu datÃ©e est traditionnelle dans des systÃ¨mes
comme `Matlab`. La bibliothÃ¨que `matplotlib.pyplot` l'a reproduit pour
faciliter la migration d'utilisateurs de ces systÃ¨mes. Par habitude
beaucoup d'exemples sur internet utilisent encore cette approche; cela
peut rester pratique comme raccourci dans des exemples en une ligne
comme ci-dessus.

Mais on sait depuis -- et c'est ce que nous vous enseignons depuis le
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 12, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
(an object of type figure).

This somewhat dated approach is traditional in systems
like `Matlab`. The `matplotlib.pyplot` library reproduced it to
facilitate migration from these systems. By habit
many examples on the internet still use this approach; this
can remain practical as a shortcut in one-line examples
like above.

But we know since -- and this is what we teach you from the
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
(un objet de type figure).

Cette approche quelque peu datÃ©e est traditionnelle dans des systÃ¨mes
comme `Matlab`. La bibliothÃ¨que `matplotlib.pyplot` l'a reproduit pour
faciliter la migration d'utilisateurs de ces systÃ¨mes. Par habitude
beaucoup d'exemples sur internet utilisent encore cette approche; cela
peut rester pratique comme raccourci dans des exemples en une ligne
comme ci-dessus.

Mais on sait depuis -- et c'est ce que nous vous enseignons depuis le
</document>
<translated>

(an object of type figure).

This somewhat dated approach is traditional in systems
like `Matlab`. The `matplotlib.pyplot` library reproduced it to
facilitate migration from these systems. By habit
many examples on the internet still use this approach; this
can remain practical as a shortcut in one-line examples
like above.

But we know since -- and this is what we teach you from the
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
dÃ©but de l'annÃ©e -- que l'on obtient du code beaucoup plus modulaire
si l'on sÃ©pare proprement les traitements et calculs (par exemple
construire une figure) des entrÃ©es et sorties (par exemple afficher la
figure).

De ce fait, pour tout usage non trivial, il est prÃ©fÃ©rable d'utiliser
l'interface objet de `matplotlib`, comme dans l'exemple suivant:
    
:::

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 13, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
dÃ©but de l'annÃ©e -- that allows us to obtain much more modular code
if we properly separate the processing and calculations (for example
building a figure) from the inputs and outputs (for example displaying the
figure).

For this reason, for any non-trivial usage, it is preferable to use
the object interface of `matplotlib`, as in the following example:
    
:::
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
dÃ©but de l'annÃ©e -- que l'on obtient du code beaucoup plus modulaire
si l'on sÃ©pare proprement les traitements et calculs (par exemple
construire une figure) des entrÃ©es et sorties (par exemple afficher la
figure).

De ce fait, pour tout usage non trivial, il est prÃ©fÃ©rable d'utiliser
l'interface objet de `matplotlib`, comme dans l'exemple suivant:
    
:::

</document>
<translated>

dÃ©but de l'annÃ©e -- that allows us to obtain much more modular code
if we properly separate the processing and calculations (for example
building a figure) from the inputs and outputs (for example displaying the
figure).

For this reason, for any non-trivial usage, it is preferable to use
the object interface of `matplotlib`, as in the following example:
    
:::
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-811d54735c3ff4e5
  locked: true
  schema_version: 3
  solution: false
  task: false
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 14, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-811d54735c3ff4e5
  locked: true
  schema_version: 3
  solution: false
  task: false
---
</document>
<translated>

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
from matplotlib.figure import Figure
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0c1a66846231a7bb
  locked: true
  schema_version: 3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 15, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
from matplotlib.figure import Figure
```

```
nbgrader:
  grade: false
  grade_id: cell-0c1a66846231a7bb
  locked: true
  schema_version: 3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
from matplotlib.figure import Figure
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0c1a66846231a7bb
  locked: true
  schema_version: 3
</document>
<translated>

from matplotlib.figure import Figure
```

```
nbgrader:
  grade: false
  grade_id: cell-0c1a66846231a7bb
  locked: true
  schema_version: 3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  solution: false
  task: false
---
fig = Figure()              # Construction d'une nouvelle figure
subplot = fig.add_subplot() # Ajout d'une zone de dessin (appelÃ©e Â«axesÂ» dans matplotlib) Ã  la figure
subplot.imshow(img)         # Ajout d'une image Ã  la zone de dessin
fig                         # Affichage de la figure
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-67d310808fac6650", "locked": true, "schema_version": 3, "solution": false}}
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 16, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  solution: false
  task: false
---
fig = Figure()              # Construction d'une nouvelle figure
subplot = fig.add_subplot() # Ajout d'une zone de dessin (appelÃ©e Â«axesÂ» dans matplotlib) Ã  la figure
subplot.imshow(img)         # Ajout d'une image Ã  la zone de dessin
fig                         # Affichage de la figure
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-67d310808fac6650", "locked": true, "schema_version": 3, "solution": false}}
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  solution: false
  task: false
---
fig = Figure()              # Construction d'une nouvelle figure
subplot = fig.add_subplot() # Ajout d'une zone de dessin (appelÃ©e Â«axesÂ» dans matplotlib) Ã  la figure
subplot.imshow(img)         # Ajout d'une image Ã  la zone de dessin
fig                         # Affichage de la figure
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-67d310808fac6650", "locked": true, "schema_version": 3, "solution": false}}
</document>
<translated>

  solution: false
  task: false
---
fig = Figure()              # Construction d'une nouvelle figure
subplot = fig.add_subplot() # Ajout d'une zone de dessin (appelÃ©e Â«axesÂ» dans matplotlib) Ã  la figure
subplot.imshow(img)         # Ajout d'une image Ã  la zone de dessin
fig                         # Affichage de la figure
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-67d310808fac6650", "locked": true, "schema_version": 3, "solution": false}}
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

Consultez la documentation de **PIL Image** sur internet, pour trouver
comment obtenir la largeur et la hauteur de cette image. Stockez le
rÃ©sultat dans des variables `width` et `height` et vÃ©rifiez la
cohÃ©rence avec la figure ci-dessus.

```{code-cell} ipython3
---
nbgrader:
  grade: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 17, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Consult the **PIL Image** documentation on the internet to find
how to get the width and height of this image. Store the
result in variables `width` and `height` and verify the
consistency with the figure above.

```{code-cell} ipython3
---
nbgrader:
  grade: false
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

Consultez la documentation de **PIL Image** sur internet, pour trouver
comment obtenir la largeur et la hauteur de cette image. Stockez le
rÃ©sultat dans des variables `width` et `height` et vÃ©rifiez la
cohÃ©rence avec la figure ci-dessus.

```{code-cell} ipython3
---
nbgrader:
  grade: false
</document>
<translated>

Consult the **PIL Image** documentation on the internet to find
how to get the width and height of this image. Store the
result in variables `width` and `height` and verify the
consistency with the figure above.

```{code-cell} ipython3
---
nbgrader:
  grade: false
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  grade_id: cell-46598b84e0c79fc6
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
width, height = img.size 
### END SOLUTION
```
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 18, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
grade_id: cell-46598b84e0c79fc6
locked: false
schema_version: 3
solution: true
task: false
---
### BEGIN SOLUTION
width, height = img.size 
### END SOLUTION
```
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  grade_id: cell-46598b84e0c79fc6
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
width, height = img.size 
### END SOLUTION
```
</document>
<translated>

grade_id: cell-46598b84e0c79fc6
locked: false
schema_version: 3
solution: true
task: false
---
### BEGIN SOLUTION
width, height = img.size 
### END SOLUTION
```
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-c6bfc2a73d6866ce
  locked: true
  points: 1
  schema_version: 3
  solution: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 19, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
Okay, I understand the instructions.

1. **Document Type:** The document appears to be a Jupyter Notebook (`.ipynb`) based on the `{code-cell}` and `nbgrader` syntax and YAML front matter.
2. **Source Language:**  It seems the source language is French.
3. **Non-Translatable Elements:** I will preserve code cells, YAML front matter, and any other syntax.
4. **Translation:** I will translate only the natural language elements.

Here's the translation:

<output>
```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-c6bfc2a73d6866ce
  locked: true
  points: 1
  schema_version: 3
  solution: false
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-c6bfc2a73d6866ce
  locked: true
  points: 1
  schema_version: 3
  solution: false
</document>
<translated>

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-c6bfc2a73d6866ce
  locked: true
  points: 1
  schema_version: 3
  solution: false
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  task: false
---
assert width == 256
assert height == 256
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5aa2ff2d91d5b0b3", "locked": true, "schema_version": 3, "solution": false}}

## Images comme tableaux

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 20, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  task: false
---
assert width == 256
assert height == 256
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5aa2ff2d91d5b0b3", "locked": true, "schema_version": 3, "solution": false}}

## Images as tables

</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  task: false
---
assert width == 256
assert height == 256
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5aa2ff2d91d5b0b3", "locked": true, "schema_version": 3, "solution": false}}

## Images comme tableaux

</document>
<translated>

  task: false
---
assert width == 256
assert height == 256
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5aa2ff2d91d5b0b3", "locked": true, "schema_version": 3, "solution": false}}

## Images as tables

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
On souhaite maintenant pouvoir accÃ©der au contenu de l'image pour
pouvoir calculer avec. Pour cela, nous allons convertir l'image en un
tableau de nombres `NumPy`, tels ceux que nous avons manipulÃ©s dans la
[fiche prÃ©cÃ©dente](1_tableaux.md).

Voici le tableau associÃ© Ã  l'image:

```{code-cell} ipython3
---
nbgrader:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 21, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
On souhaite maintenant pouvoir accÃ©der au contenu de l'image pour
pouvoir calculer avec. Pour cela, nous allons convertir l'image en un
tableau de nombres `NumPy`, tels ceux que nous avons manipulÃ©s dans la
[fiche prÃ©cÃ©dente](1_tableaux.md).

Voici le tableau associÃ© Ã  l'image:

```{code-cell} ipython3
---
nbgrader:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
On souhaite maintenant pouvoir accÃ©der au contenu de l'image pour
pouvoir calculer avec. Pour cela, nous allons convertir l'image en un
tableau de nombres `NumPy`, tels ceux que nous avons manipulÃ©s dans la
[fiche prÃ©cÃ©dente](1_tableaux.md).

Voici le tableau associÃ© Ã  l'image:

```{code-cell} ipython3
---
nbgrader:
</document>
<translated>

On souhaite maintenant pouvoir accÃ©der au contenu de l'image pour
pouvoir calculer avec. Pour cela, nous allons convertir l'image en un
tableau de nombres `NumPy`, tels ceux que nous avons manipulÃ©s dans la
[fiche prÃ©cÃ©dente](1_tableaux.md).

Voici le tableau associÃ© Ã  l'image:

```{code-cell} ipython3
---
nbgrader:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  grade: false
  grade_id: cell-8f62152c1e513665
  locked: true
  schema_version: 3
  solution: false
  task: false
---
import numpy as np
```

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 22, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  grade: false
  grade_id: cell-8f62152c1e513665
  locked: true
  schema_version: 3
  solution: false
  task: false
---
import numpy as np
```
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  grade: false
  grade_id: cell-8f62152c1e513665
  locked: true
  schema_version: 3
  solution: false
  task: false
---
import numpy as np
```

</document>
<translated>

  grade: false
  grade_id: cell-8f62152c1e513665
  locked: true
  schema_version: 3
  solution: false
  task: false
---
import numpy as np
```</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f1cf391e96f32f52
  locked: true
  schema_version: 3
  solution: false
---
M = np.array(img)
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 23, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f1cf391e96f32f52
  locked: true
  schema_version: 3
  solution: false
---
M = np.array(img)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f1cf391e96f32f52
  locked: true
  schema_version: 3
  solution: false
---
M = np.array(img)
</document>
<translated>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f1cf391e96f32f52
  locked: true
  schema_version: 3
  solution: false
---
M = np.array(img)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```

+++ {"nbgrader": {"grade": true, "grade_id": "cell-1a34fbbc93618b40", "locked": false, "schema_version": 3, "solution": true, "task": false, "points": 0}}

En vous rÃ©fÃ©rant Ã©ventuellement au cours, combien de lignes, de
colonnes et de couches devrait avoir ce tableau?

BEGIN SOLUTION

Il devrait y avoir 256 lignes, 256 colonnes et quatre couches.
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 24, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```
+++ {"nbgrader": {"grade": true, "grade_id": "cell-1a34fbbc93618b40", "locked": false, "schema_version": 3, "solution": true, "task": false, "points": 0}}

Referring to the course, how many rows, columns, and layers should this table have?

BEGIN SOLUTION

It should have 256 rows, 256 columns, and four layers.
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```

+++ {"nbgrader": {"grade": true, "grade_id": "cell-1a34fbbc93618b40", "locked": false, "schema_version": 3, "solution": true, "task": false, "points": 0}}

En vous rÃ©fÃ©rant Ã©ventuellement au cours, combien de lignes, de
colonnes et de couches devrait avoir ce tableau?

BEGIN SOLUTION

Il devrait y avoir 256 lignes, 256 colonnes et quatre couches.
</document>
<translated>

```
+++ {"nbgrader": {"grade": true, "grade_id": "cell-1a34fbbc93618b40", "locked": false, "schema_version": 3, "solution": true, "task": false, "points": 0}}

Referring to the course, how many rows, columns, and layers should this table have?

BEGIN SOLUTION

It should have 256 rows, 256 columns, and four layers.
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

END SOLUTION

VÃ©rifier avec l'attribut `shape`:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f3258fc6004a71d6
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 25, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>

END SOLUTION

VÃ©rifier avec l'attribut `shape`:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f3258fc6004a71d6
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

END SOLUTION

VÃ©rifier avec l'attribut `shape`:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f3258fc6004a71d6
</document>
<translated>


END SOLUTION

VÃ©rifier avec l'attribut `shape`:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f3258fc6004a71d6
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: false
  schema_version: 3
  solution: true
---
### BEGIN SOLUTION
M.shape
### END SOLUTION
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb75", "locked": true, "schema_version": 3, "solution": false}}
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 26, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: false
  schema_version: 3
  solution: true
---
### BEGIN SOLUTION
M.shape
### END SOLUTION
```
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: false
  schema_version: 3
  solution: true
---
### BEGIN SOLUTION
M.shape
### END SOLUTION
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb75", "locked": true, "schema_version": 3, "solution": false}}
</document>
<translated>

  locked: false
  schema_version: 3
  solution: true
---
### BEGIN SOLUTION
M.shape
### END SOLUTION
```
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

Pourquoi quatre couches? Rouge, Vert, Bleu, ... et transparence!

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb76", "locked": true, "schema_version": 3, "solution": false}}

### Comprendre les couches de couleurs

Comme toujours, pour mieux comprendre des donnÃ©es, il faut les
visualiser !  Voici une figure reprÃ©sentant notre image et ses trois
couches rouge, vert, bleu.  Observez comment les couleurs de l'image
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 27, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Why four layers? Red, Green, Blue, ... and transparency!

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb76", "locked": true, "schema_version": 3, "solution": false}}

### Understanding color layers

As always, to better understand data, you need to
visualize it! Here's a figure representing our image and its three
color layers, red, green, blue. Observe how the colors of the image
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

Pourquoi quatre couches? Rouge, Vert, Bleu, ... et transparence!

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb76", "locked": true, "schema_version": 3, "solution": false}}

### Comprendre les couches de couleurs

Comme toujours, pour mieux comprendre des donnÃ©es, il faut les
visualiser !  Voici une figure reprÃ©sentant notre image et ses trois
couches rouge, vert, bleu.  Observez comment les couleurs de l'image
</document>
<translated>

Why four layers? Red, Green, Blue, ... and transparency!

+++ {"nbgrader": {"grade": false, "grade_id": "cell-397f146412f6fb76", "locked": true, "schema_version": 3, "solution": false}}

### Understanding color layers

As always, to better understand data, you need to
visualize it! Here's a figure representing our image and its three
color layers, red, green, blue. Observe how the colors of the image
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
de dÃ©part (blanc, vert, noir, rouge) se dÃ©composent dans les
diffÃ©rentes couches.

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-49b556a7e4717b09
  locked: true
  schema_version: 3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 28, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
de dÃ©part (blanc, vert, noir, rouge) se dÃ©composent dans les
diffÃ©rentes couches.

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-49b556a7e4717b09
  locked: true
  schema_version: 3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
de dÃ©part (blanc, vert, noir, rouge) se dÃ©composent dans les
diffÃ©rentes couches.

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-49b556a7e4717b09
  locked: true
  schema_version: 3
</document>
<translated>

de dÃ©part (blanc, vert, noir, rouge) se dÃ©composent dans les
diffÃ©rentes couches.

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-49b556a7e4717b09
  locked: true
  schema_version: 3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  solution: false
  task: false
---
# Ã‰chelles de couleur (colormap) allant du noir Ã  la couleur primaire correspondante
from matplotlib.colors import LinearSegmentedColormap
black_red_cmap   = LinearSegmentedColormap.from_list('black_red_cmap',   ["black", "red"])
black_green_cmap = LinearSegmentedColormap.from_list('black_green_cmap', ["black", "green"])
black_blue_cmap  = LinearSegmentedColormap.from_list('black_blue_cmap',  ["black", "blue"])

fig = Figure(figsize=(30, 5));
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 29, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  solution: false
  task: false
---
# Color scales (colormap) from black to the corresponding primary color
from matplotlib.colors import LinearSegmentedColormap
black_red_cmap   = LinearSegmentedColormap.from_list('black_red_cmap',   ["black", "red"])
black_green_cmap = LinearSegmentedColormap.from_list('black_green_cmap', ["black", "green"])
black_blue_cmap  = LinearSegmentedColormap.from_list('black_blue_cmap',  ["black", "blue"])

fig = Figure(figsize=(30, 5));
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  solution: false
  task: false
---
# Ã‰chelles de couleur (colormap) allant du noir Ã  la couleur primaire correspondante
from matplotlib.colors import LinearSegmentedColormap
black_red_cmap   = LinearSegmentedColormap.from_list('black_red_cmap',   ["black", "red"])
black_green_cmap = LinearSegmentedColormap.from_list('black_green_cmap', ["black", "green"])
black_blue_cmap  = LinearSegmentedColormap.from_list('black_blue_cmap',  ["black", "blue"])

fig = Figure(figsize=(30, 5));
</document>
<translated>

  solution: false
  task: false
---
# Color scales (colormap) from black to the corresponding primary color
from matplotlib.colors import LinearSegmentedColormap
black_red_cmap   = LinearSegmentedColormap.from_list('black_red_cmap',   ["black", "red"])
black_green_cmap = LinearSegmentedColormap.from_list('black_green_cmap', ["black", "green"])
black_blue_cmap  = LinearSegmentedColormap.from_list('black_blue_cmap',  ["black", "blue"])

fig = Figure(figsize=(30, 5));
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
(subplot, subplotr, subplotg, subplotb) = fig.subplots(1, 4)  # Quatre zones de dessin
# Dessin de l'image et de ses trois couches
subplot.imshow(M)
imgr = subplotr.imshow(M[:,:,0], cmap=black_red_cmap,   vmin=0, vmax=255)
imgg = subplotg.imshow(M[:,:,1], cmap=black_green_cmap, vmin=0, vmax=255)
imgb = subplotb.imshow(M[:,:,2], cmap=black_blue_cmap,  vmin=0, vmax=255)
# Ajout des barres d'Ã©chelle de couleur aux images
fig.colorbar(imgr, ax=subplotr);
fig.colorbar(imgg, ax=subplotg);
fig.colorbar(imgb, ax=subplotb);
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 30, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>(subplot, subplotr, subplotg, subplotb) = fig.subplots(1, 4)  # Quatre zones de dessin
# Dessin de l'image et de ses trois couches
subplot.imshow(M)
imgr = subplotr.imshow(M[:,:,0], cmap=black_red_cmap,   vmin=0, vmax=255)
imgg = subplotg.imshow(M[:,:,1], cmap=black_green_cmap, vmin=0, vmax=255)
imgb = subplotb.imshow(M[:,:,2], cmap=black_blue_cmap,  vmin=0, vmax=255)
# Ajout des barres d'Ã©chelle de couleur aux images
fig.colorbar(imgr, ax=subplotr);
fig.colorbar(imgg, ax=subplotg);
fig.colorbar(imgb, ax=subplotb);
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
(subplot, subplotr, subplotg, subplotb) = fig.subplots(1, 4)  # Quatre zones de dessin
# Dessin de l'image et de ses trois couches
subplot.imshow(M)
imgr = subplotr.imshow(M[:,:,0], cmap=black_red_cmap,   vmin=0, vmax=255)
imgg = subplotg.imshow(M[:,:,1], cmap=black_green_cmap, vmin=0, vmax=255)
imgb = subplotb.imshow(M[:,:,2], cmap=black_blue_cmap,  vmin=0, vmax=255)
# Ajout des barres d'Ã©chelle de couleur aux images
fig.colorbar(imgr, ax=subplotr);
fig.colorbar(imgg, ax=subplotg);
fig.colorbar(imgb, ax=subplotb);
</document>
<translated>
(subplot, subplotr, subplotg, subplotb) = fig.subplots(1, 4)  # Quatre zones de dessin
# Dessin de l'image et de ses trois couches
subplot.imshow(M)
imgr = subplotr.imshow(M[:,:,0], cmap=black_red_cmap,   vmin=0, vmax=255)
imgg = subplotg.imshow(M[:,:,1], cmap=black_green_cmap, vmin=0, vmax=255)
imgb = subplotb.imshow(M[:,:,2], cmap=black_blue_cmap,  vmin=0, vmax=255)
# Ajout des barres d'Ã©chelle de couleur aux images
fig.colorbar(imgr, ax=subplotr);
fig.colorbar(imgg, ax=subplotg);
fig.colorbar(imgb, ax=subplotb);
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
fig
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-953569768ed43403"}}

Par la suite, nous visualiserons de mÃªme de nombreuses images.  Il est
donc temps d'automatiser la construction de la figure ci-dessus.

:::{admonition} Exercice

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 31, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
fig
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-953569768ed43403"}}

Subsequently, we will visualize many images.  It is
therefore time to automate the construction of the figure above.

:::{admonition} Exercise

</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
fig
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-953569768ed43403"}}

Par la suite, nous visualiserons de mÃªme de nombreuses images.  Il est
donc temps d'automatiser la construction de la figure ci-dessus.

:::{admonition} Exercice

</document>
<translated>

fig
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-953569768ed43403"}}

Subsequently, we will visualize many images.  It is
therefore time to automate the construction of the figure above.

:::{admonition} Exercise

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
Ouvrez le fichier [utilities.py](utilities.py) et complÃ©tez-y la
fonction `show_color_channels` Ã  partir du code ci-dessus.

:::

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-40f2b1ca26aac943
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 32, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Ouvrez le fichier [utilities.py](utilities.py) et complÃ©tez-y la
fonction `show_color_channels` Ã  partir du code ci-dessus.

:::

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-40f2b1ca26aac943
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
Ouvrez le fichier [utilities.py](utilities.py) et complÃ©tez-y la
fonction `show_color_channels` Ã  partir du code ci-dessus.

:::

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-40f2b1ca26aac943
</document>
<translated>

Ouvrez le fichier [utilities.py](utilities.py) et complÃ©tez-y la
fonction `show_color_channels` Ã  partir du code ci-dessus.

:::

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-40f2b1ca26aac943
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
# Automatically reload code when changes are made
%load_ext autoreload
%autoreload 2
from intro_science_donnees import *
from utilities import *
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 33, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
# Automatically reload code when changes are made
%load_ext autoreload
%autoreload 2
from intro_science_donnees import *
from utilities import *
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
# Automatically reload code when changes are made
%load_ext autoreload
%autoreload 2
from intro_science_donnees import *
from utilities import *
</document>
<translated>

  locked: true
  schema_version: 3
  solution: false
  task: false
---
# Automatically reload code when changes are made
%load_ext autoreload
%autoreload 2
from intro_science_donnees import *
from utilities import *
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f01f30acda19b78b
  locked: true
  schema_version: 3
  solution: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 34, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f01f30acda19b78b
  locked: true
  schema_version: 3
  solution: false
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f01f30acda19b78b
  locked: true
  schema_version: 3
  solution: false
</document>
<translated>

```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-f01f30acda19b78b
  locked: true
  schema_version: 3
  solution: false
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  task: false
---
show_source(show_color_channels)
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-66040947f316edfb
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 35, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  task: false
---
show_source(show_color_channels)
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-66040947f316edfb
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  task: false
---
show_source(show_color_channels)
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-66040947f316edfb
</document>
<translated>

  task: false
---
show_source(show_color_channels)
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-66040947f316edfb
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-fda75a63d59e2209"}}
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 36, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-fda75a63d59e2209"}}
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-fda75a63d59e2209"}}
</document>
<translated>

  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-fda75a63d59e2209"}}
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

VÃ©rification: `show_color_channels` renvoie bien une figure

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-80328561c59cf158
  locked: true
  points: 1
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 37, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Verification: `show_color_channels` correctly returns a figure

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-80328561c59cf158
  locked: true
  points: 1
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

VÃ©rification: `show_color_channels` renvoie bien une figure

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-80328561c59cf158
  locked: true
  points: 1
</document>
<translated>

Verification: `show_color_channels` correctly returns a figure

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-80328561c59cf158
  locked: true
  points: 1
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  schema_version: 3
  solution: false
  task: false
---
assert isinstance(show_color_channels(img), Figure)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-0cf719f423e37ef5"}}

Ã‰tudions maintenant les images du jeu de donnÃ©es de la semaine
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 38, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
schema_version: 3
solution: false
task: false
---
assert isinstance(show_color_channels(img), Figure)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-0cf719f423e37ef5"}}

Now let's look at the images from the week's dataset.
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  schema_version: 3
  solution: false
  task: false
---
assert isinstance(show_color_channels(img), Figure)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-0cf719f423e37ef5"}}

Ã‰tudions maintenant les images du jeu de donnÃ©es de la semaine
</document>
<translated>

schema_version: 3
solution: false
task: false
---
assert isinstance(show_color_channels(img), Figure)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-0cf719f423e37ef5"}}

Now let's look at the images from the week's dataset.
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
derniÃ¨re:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1c62320d37fe2e8f
  locked: true
  schema_version: 3
  solution: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 39, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
derniÃ¨re:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1c62320d37fe2e8f
  locked: true
  schema_version: 3
  solution: false
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
derniÃ¨re:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1c62320d37fe2e8f
  locked: true
  schema_version: 3
  solution: false
</document>
<translated>

derniÃ¨re:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-1c62320d37fe2e8f
  locked: true
  schema_version: 3
  solution: false
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  task: false
---
import os.path
dataset_dir = os.path.join(data.dir, 'ApplesAndBananasSimple')
images = load_images(dataset_dir, "*.png")
```

```{code-cell} ipython3
---
nbgrader:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 40, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  task: false
---
import os.path
dataset_dir = os.path.join(data.dir, 'ApplesAndBananasSimple')
images = load_images(dataset_dir, "*.png")
```

```{code-cell} ipython3
---
nbgrader:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  task: false
---
import os.path
dataset_dir = os.path.join(data.dir, 'ApplesAndBananasSimple')
images = load_images(dataset_dir, "*.png")
```

```{code-cell} ipython3
---
nbgrader:
</document>
<translated>

  task: false
---
import os.path
dataset_dir = os.path.join(data.dir, 'ApplesAndBananasSimple')
images = load_images(dataset_dir, "*.png")
```

```{code-cell} ipython3
---
nbgrader:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  grade: false
  grade_id: cell-a7f1576c7b9d8917
  locked: true
  schema_version: 3
  solution: false
  task: false
---
image_grid(images, titles=images.index)
```

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 41, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  grade: false
  grade_id: cell-a7f1576c7b9d8917
  locked: true
  schema_version: 3
  solution: false
  task: false
---
image_grid(images, titles=images.index)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  grade: false
  grade_id: cell-a7f1576c7b9d8917
  locked: true
  schema_version: 3
  solution: false
  task: false
---
image_grid(images, titles=images.index)
```

</document>
<translated>

  grade: false
  grade_id: cell-a7f1576c7b9d8917
  locked: true
  schema_version: 3
  solution: false
  task: false
---
image_grid(images, titles=images.index)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-9f449b989ea74be6", "points": 0}}

:::{admonition} Exercice

Observez l'image suivante et ses couches. Expliquez ce que vous
voyez. Essayez d'autres exemples.

BEGIN SOLUTION

On remarque que les pixels noirs sont Ã  zÃ©ro dans les trois couches et
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 42, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-9f449b989ea74be6", "points": 0}}

:::{admonition} Exercise

Observe the following image and its layers. Explain what you
see. Try other examples.

BEGIN SOLUTION

We notice that the black pixels are at zero in the three layers and
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-9f449b989ea74be6", "points": 0}}

:::{admonition} Exercice

Observez l'image suivante et ses couches. Expliquez ce que vous
voyez. Essayez d'autres exemples.

BEGIN SOLUTION

On remarque que les pixels noirs sont Ã  zÃ©ro dans les trois couches et
</document>
<translated>

+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-9f449b989ea74be6", "points": 0}}

:::{admonition} Exercise

Observe the following image and its layers. Explain what you
see. Try other examples.

BEGIN SOLUTION

We notice that the black pixels are at zero in the three layers and
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
les pixels blancs Ã  255 dans les trois couches. Le jaune Ã©tant la
couleur complÃ©mentaire du bleu est Ã  255 en rouge et en vert et 0 en
bleu.

END SOLUTION

:::

```{code-cell} ipython3
img = images[10]
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 43, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
the white pixels at 255 in the three layers. Yellow being the complementary color of blue is at 255 in red and green and 0 in blue.

END SOLUTION

:::

```{code-cell} ipython3
img = images[10]
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
les pixels blancs Ã  255 dans les trois couches. Le jaune Ã©tant la
couleur complÃ©mentaire du bleu est Ã  255 en rouge et en vert et 0 en
bleu.

END SOLUTION

:::

```{code-cell} ipython3
img = images[10]
</document>
<translated>

the white pixels at 255 in the three layers. Yellow being the complementary color of blue is at 255 in red and green and 0 in blue.

END SOLUTION

:::

```{code-cell} ipython3
img = images[10]
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-291f681a5aab593d"}}

Nous allons maintenant observer l'**histogramme des couleurs**
apparaissant dans une image, en utilisant l'utilitaire
`color_histogram` (vous pouvez comme d'habitude en consulter la
documentation et le code par introspection avec `color_histogram?` et
`color_histogram??`):
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 44, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-291f681a5aab593d"}}

We will now observe the **color histogram**
appearing in an image, using the
`color_histogram` utility
(as usual, you can consult the documentation and code by introspection with
`color_histogram?` and
`color_histogram??`):
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-291f681a5aab593d"}}

Nous allons maintenant observer l'**histogramme des couleurs**
apparaissant dans une image, en utilisant l'utilitaire
`color_histogram` (vous pouvez comme d'habitude en consulter la
documentation et le code par introspection avec `color_histogram?` et
`color_histogram??`):
</document>
<translated>

show_color_channels(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": false, "grade": false, "locked": true, "task": false, "grade_id": "cell-291f681a5aab593d"}}

We will now observe the **color histogram**
appearing in an image, using the
`color_histogram` utility
(as usual, you can consult the documentation and code by introspection with
`color_histogram?` and
`color_histogram??`):
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-ed77018895a029a9
  locked: true
  schema_version: 3
  solution: false
  task: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 45, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
Okay, I'm ready.

1. **Analysis:** The document appears to be a Jupyter Notebook snippet. It contains YAML frontmatter for `nbgrader` and a code cell declaration. There is no natural language content to translate.

2. **Confirmation:** I confirm that there is no natural language text needing translation.

3. **Translation:** No translation is needed.

4. **Output:**

<output>
```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-ed77018895a029a9
  locked: true
  schema_version: 3
  solution: false
  task: false
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-ed77018895a029a9
  locked: true
  schema_version: 3
  solution: false
  task: false
</document>
<translated>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-ed77018895a029a9
  locked: true
  schema_version: 3
  solution: false
  task: false
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
---
color_histogram(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-a887ca1b2eac11df", "points": 2}}

:::{admonition} Exercice

Observez les histogrammes ci-dessous de la dixiÃ¨me et la troisiÃ¨me
image, et interprÃ©tez-les.
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 46, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
color_histogram(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-a887ca1b2eac11df", "points": 2}}

:::{admonition} Exercise

Observe the histograms below of the tenth and third
image, and interpret them.
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
---
color_histogram(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-a887ca1b2eac11df", "points": 2}}

:::{admonition} Exercice

Observez les histogrammes ci-dessous de la dixiÃ¨me et la troisiÃ¨me
image, et interprÃ©tez-les.
</document>
<translated>

color_histogram(img)
```

+++ {"nbgrader": {"schema_version": 3, "solution": true, "grade": true, "locked": false, "task": false, "grade_id": "cell-a887ca1b2eac11df", "points": 2}}

:::{admonition} Exercise

Observe the histograms below of the tenth and third
image, and interpret them.
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

BEGIN SOLUTION

Image 10 : on remarque que de les pixels verts et rouges se situent
trÃ¨s majoritairement dans des valeurs supÃ©rieures Ã  150, tandis que de
nombreux pixels bleus se situent dans des valeurs infÃ©rieures. C'est
logique Ã©tant donnÃ© la couleur jaune de la pomme (jaune Ã©tant la
couleur complÃ©mentaire du bleu).

Image 3 : on remarque qu'il y a davantage de pixels rouges ayant la
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 47, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Image 10 : we notice that the green and red pixels are predominantly located
in values greater than 150, while many blue pixels are located in values less than. This
is logical given the yellow color of the apple (yellow being the
complementary color of blue).

Image 3 : we notice that there are more red pixels having the
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

BEGIN SOLUTION

Image 10 : on remarque que de les pixels verts et rouges se situent
trÃ¨s majoritairement dans des valeurs supÃ©rieures Ã  150, tandis que de
nombreux pixels bleus se situent dans des valeurs infÃ©rieures. C'est
logique Ã©tant donnÃ© la couleur jaune de la pomme (jaune Ã©tant la
couleur complÃ©mentaire du bleu).

Image 3 : on remarque qu'il y a davantage de pixels rouges ayant la
</document>
<translated>

Image 10 : we notice that the green and red pixels are predominantly located
in values greater than 150, while many blue pixels are located in values less than. This
is logical given the yellow color of the apple (yellow being the
complementary color of blue).

Image 3 : we notice that there are more red pixels having the
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
valeur 256 ; bleus et verts ayant dans l'ensemble des valeurs plus
faibles que les pixels rouges. CohÃ©rent, puisque la pomme de l'image
est rouge.

END SOLUTION

:::

```{code-cell} ipython3
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 48, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
valeur 256 ; bleus et verts ayant dans l'ensemble des valeurs plus
faibles que les pixels rouges. CohÃ©rent, puisque la pomme de l'image
est rouge.

END SOLUTION

:::

```{code-cell} ipython3
---
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
valeur 256 ; bleus et verts ayant dans l'ensemble des valeurs plus
faibles que les pixels rouges. CohÃ©rent, puisque la pomme de l'image
est rouge.

END SOLUTION

:::

```{code-cell} ipython3
---
</document>
<translated>

valeur 256 ; bleus et verts ayant dans l'ensemble des valeurs plus
faibles que les pixels rouges. CohÃ©rent, puisque la pomme de l'image
est rouge.

END SOLUTION

:::

```{code-cell} ipython3
---
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
nbgrader:
  grade: false
  grade_id: cell-3828ddf071670eff
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[9]
show_color_channels(img)
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 49, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
nbgrader:
  grade: false
  grade_id: cell-3828ddf071670eff
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[9]
show_color_channels(img)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
nbgrader:
  grade: false
  grade_id: cell-3828ddf071670eff
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[9]
show_color_channels(img)
</document>
<translated>

nbgrader:
  grade: false
  grade_id: cell-3828ddf071670eff
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[9]
show_color_channels(img)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-3d6d2c2781569087
  locked: true
  schema_version: 3
  solution: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 50, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-3d6d2c2781569087
  locked: true
  schema_version: 3
  solution: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-3d6d2c2781569087
  locked: true
  schema_version: 3
  solution: false
</document>
<translated>

```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-3d6d2c2781569087
  locked: true
  schema_version: 3
  solution: false
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  task: false
---
color_histogram(img)
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-4f5ef22b7b70c0c8
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 51, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  task: false
---
color_histogram(img)
```

```
nbgrader:
  grade: false
  grade_id: cell-4f5ef22b7b70c0c8
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  task: false
---
color_histogram(img)
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-4f5ef22b7b70c0c8
</document>
<translated>

  task: false
---
color_histogram(img)
```

```
nbgrader:
  grade: false
  grade_id: cell-4f5ef22b7b70c0c8
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[2]
show_color_channels(img)
```

```{code-cell} ipython3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 52, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[2]
show_color_channels(img)
```

```{code-cell} ipython3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[2]
show_color_channels(img)
```

```{code-cell} ipython3
</document>
<translated>

  locked: true
  schema_version: 3
  solution: false
  task: false
---
img = images[2]
show_color_channels(img)
```

```{code-cell} ipython3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
---
nbgrader:
  grade: false
  grade_id: cell-7ef43bfaf750914f
  locked: true
  schema_version: 3
  solution: false
  task: false
---
color_histogram(img)
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 53, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
---
nbgrader:
  grade: false
  grade_id: cell-7ef43bfaf750914f
  locked: true
  schema_version: 3
  solution: false
  task: false
---
color_histogram(img)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
---
nbgrader:
  grade: false
  grade_id: cell-7ef43bfaf750914f
  locked: true
  schema_version: 3
  solution: false
  task: false
---
color_histogram(img)
</document>
<translated>

---
nbgrader:
  grade: false
  grade_id: cell-7ef43bfaf750914f
  locked: true
  schema_version: 3
  solution: false
  task: false
---
color_histogram(img)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d6255f7be07beda", "locked": true, "schema_version": 3, "solution": false}}

## SÃ©paration des couleurs

Nous allons maintenant extraire les trois canaux, rouge, vert,
bleu. Pour le canal des rouges, on extrait le sous-tableau Ã  deux
dimensions de toutes les cases d'indice $(i,j,k)$ avec $k=0$. Le 
`* 1.0` sert Ã  convertir les valeurs en nombres Ã  virgule.
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 54, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d6255f7be07beda", "locked": true, "schema_version": 3, "solution": false}}

## Color Separation

We will now extract the three channels, red, green,
blue. For the red channel, we extract the two-dimensional subarray of all cases with index $(i,j,k)$ with $k=0$. The 
`* 1.0` serves to convert the values into floating-point numbers.
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d6255f7be07beda", "locked": true, "schema_version": 3, "solution": false}}

## SÃ©paration des couleurs

Nous allons maintenant extraire les trois canaux, rouge, vert,
bleu. Pour le canal des rouges, on extrait le sous-tableau Ã  deux
dimensions de toutes les cases d'indice $(i,j,k)$ avec $k=0$. Le 
`* 1.0` sert Ã  convertir les valeurs en nombres Ã  virgule.
</document>
<translated>

```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d6255f7be07beda", "locked": true, "schema_version": 3, "solution": false}}

## Color Separation

We will now extract the three channels, red, green,
blue. For the red channel, we extract the two-dimensional subarray of all cases with index $(i,j,k)$ with $k=0$. The 
`* 1.0` serves to convert the values into floating-point numbers.
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-dfe51efcf6df748b
  locked: true
  schema_version: 3
  solution: false
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 55, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-dfe51efcf6df748b
  locked: true
  schema_version: 3
  solution: false
---
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-dfe51efcf6df748b
  locked: true
  schema_version: 3
  solution: false
---
</document>
<translated>


```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-dfe51efcf6df748b
  locked: true
  schema_version: 3
  solution: false
---
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
R = M[:,:,0] * 1.0
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-59920f8c83495b86", "locked": true, "schema_version": 3, "solution": false}}

Regarder le rÃ©sultat directement n'est pas trÃ¨s informatif :

```{code-cell} ipython3
---
nbgrader:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 56, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
R = M[:,:,0] * 1.0
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-59920f8c83495b86", "locked": true, "schema_version": 3, "solution": false}}

Looking at the result directly is not very informative:

```{code-cell} ipython3
---
nbgrader:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
R = M[:,:,0] * 1.0
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-59920f8c83495b86", "locked": true, "schema_version": 3, "solution": false}}

Regarder le rÃ©sultat directement n'est pas trÃ¨s informatif :

```{code-cell} ipython3
---
nbgrader:
</document>
<translated>

R = M[:,:,0] * 1.0
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-59920f8c83495b86", "locked": true, "schema_version": 3, "solution": false}}

Looking at the result directly is not very informative:

```{code-cell} ipython3
---
nbgrader:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  grade: false
  grade_id: cell-79a4159977138616
  locked: true
  schema_version: 3
  solution: false
---
R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-58b15c024481ac3d", "locked": true, "schema_version": 3, "solution": false}}
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 57, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  grade: false
  grade_id: cell-79a4159977138616
  locked: true
  schema_version: 3
  solution: false
---
R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-58b15c024481ac3d", "locked": true, "schema_version": 3, "solution": false}}
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  grade: false
  grade_id: cell-79a4159977138616
  locked: true
  schema_version: 3
  solution: false
---
R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-58b15c024481ac3d", "locked": true, "schema_version": 3, "solution": false}}
</document>
<translated>

  grade: false
  grade_id: cell-79a4159977138616
  locked: true
  schema_version: 3
  solution: false
---
R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-58b15c024481ac3d", "locked": true, "schema_version": 3, "solution": false}}
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

Comme d'habitude, il vaut mieux le *visualiser* :

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-403d27ca87e158c3
  locked: true
  schema_version: 3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 58, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
As usual, it is better to *visualize* it:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-403d27ca87e158c3
  locked: true
  schema_version: 3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

Comme d'habitude, il vaut mieux le *visualiser* :

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-403d27ca87e158c3
  locked: true
  schema_version: 3
</document>
<translated>

As usual, it is better to *visualize* it:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-403d27ca87e158c3
  locked: true
  schema_version: 3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  solution: false
---
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(R, cmap='Greys_r', vmin=0, vmax=255)
fig
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-f5748504b4d52000", "locked": true, "schema_version": 3, "solution": false, "task": false}}
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 59, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  solution: false
---
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(R, cmap='Greys_r', vmin=0, vmax=255)
fig
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-f5748504b4d52000", "locked": true, "schema_version": 3, "solution": false, "task": false}}
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  solution: false
---
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(R, cmap='Greys_r', vmin=0, vmax=255)
fig
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-f5748504b4d52000", "locked": true, "schema_version": 3, "solution": false, "task": false}}
</document>
<translated>

  solution: false
---
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(R, cmap='Greys_r', vmin=0, vmax=255)
fig
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-f5748504b4d52000", "locked": true, "schema_version": 3, "solution": false, "task": false}}
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

:::{admonition} Exercice

Extrayez de mÃªme le canal des verts et des bleus de la premiÃ¨re image
dans les variables `G` et `B`. N'hÃ©sitez pas Ã  les visualiser !

:::

```{code-cell} ipython3
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 60, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>

:::{admonition} Exercice

Extract the green and blue channels from the first image
into the `G` and `B` variables. Feel free to visualize them!

:::

```python
---
```
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

:::{admonition} Exercice

Extrayez de mÃªme le canal des verts et des bleus de la premiÃ¨re image
dans les variables `G` et `B`. N'hÃ©sitez pas Ã  les visualiser !

:::

```{code-cell} ipython3
---
</document>
<translated>


:::{admonition} Exercice

Extract the green and blue channels from the first image
into the `G` and `B` variables. Feel free to visualize them!

:::

```python
---
```</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
nbgrader:
  grade: false
  grade_id: cell-2793bd4b1f83558d
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
G = M[:,:,1] * 1.0
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 61, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
nbgrader:
  grade: false
  grade_id: cell-2793bd4b1f83558d
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
G = M[:,:,1] * 1.0
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
nbgrader:
  grade: false
  grade_id: cell-2793bd4b1f83558d
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
G = M[:,:,1] * 1.0
</document>
<translated>

nbgrader:
  grade: false
  grade_id: cell-2793bd4b1f83558d
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
G = M[:,:,1] * 1.0
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(G, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 62, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(G, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```


/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(G, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
</document>
<translated>

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(G, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6094
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 63, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6094
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6094
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
</document>
<translated>

---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6094
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
assert G.shape == (256, 256)
assert abs(G.mean() - 158.27) < 0.1
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-8baf6161cb011920
  locked: false
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 64, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
assert G.shape == (256, 256)
assert abs(G.mean() - 158.27) < 0.1
```

```

```
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
assert G.shape == (256, 256)
assert abs(G.mean() - 158.27) < 0.1
```

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-8baf6161cb011920
  locked: false
</document>
<translated>

assert G.shape == (256, 256)
assert abs(G.mean() - 158.27) < 0.1
```

```

```
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
B = M[:,:,2] * 1.0

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 65, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
B = M[:,:,2] * 1.0

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
B = M[:,:,2] * 1.0

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
</document>
<translated>

  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
B = M[:,:,2] * 1.0

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
axr.imshow(B, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6095
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 66, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
axr.imshow(B, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```
{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6095
```</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
axr.imshow(B, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6095
</document>
<translated>

axr.imshow(B, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```
{code-cell} ipython3
---
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6095
```</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert B.shape == (256, 256)
assert abs(B.mean() - 148.39) < 0.1
```

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 67, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert B.shape == (256, 256)
assert abs(B.mean() - 148.39) < 0.1
```
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert B.shape == (256, 256)
assert abs(B.mean() - 148.39) < 0.1
```

</document>
<translated>

  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert B.shape == (256, 256)
assert abs(B.mean() - 148.39) < 0.1
```
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-233c14413c6e3e6f", "locked": true, "schema_version": 3, "solution": false}}

Il est maintenant facile de faire de l'arithmÃ©tique sur tous les
pixels. Par exemple la somme des intensitÃ©s en vert et rouge s'Ã©crit:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0bd25c9e1e6c6abf
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 68, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-233c14413c6e3e6f", "locked": true, "schema_version": 3, "solution": false}}

It is now easy to perform arithmetic on all the
pixels. For example the sum of the green and red intensities is written:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0bd25c9e1e6c6abf
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-233c14413c6e3e6f", "locked": true, "schema_version": 3, "solution": false}}

Il est maintenant facile de faire de l'arithmÃ©tique sur tous les
pixels. Par exemple la somme des intensitÃ©s en vert et rouge s'Ã©crit:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0bd25c9e1e6c6abf
</document>
<translated>

+++ {"nbgrader": {"grade": false, "grade_id": "cell-233c14413c6e3e6f", "locked": true, "schema_version": 3, "solution": false}}

It is now easy to perform arithmetic on all the
pixels. For example the sum of the green and red intensities is written:

```{code-cell} ipython3
---
nbgrader:
  grade: false
  grade_id: cell-0bd25c9e1e6c6abf
</document></translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  locked: true
  schema_version: 3
  solution: false
---
G + R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e1", "locked": true, "schema_version": 3, "solution": false}}

:::{admonition} Exercice
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 69, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  locked: true
  schema_version: 3
  solution: false
---
G + R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e1", "locked": true, "schema_version": 3, "solution": false}}

:::{admonition} Exercise
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  locked: true
  schema_version: 3
  solution: false
---
G + R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e1", "locked": true, "schema_version": 3, "solution": false}}

:::{admonition} Exercice
</document>
<translated>

  locked: true
  schema_version: 3
  solution: false
---
G + R
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e1", "locked": true, "schema_version": 3, "solution": false}}

:::{admonition} Exercise
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

Calculez et visualisez la luminositÃ© de tous les pixels de l'image, la
*luminositÃ©* d'un pixel $(r,g,b)$ Ã©tant dÃ©finie comme la moyenne
$v=\frac{r+g+b}{3}$:

:::

```{code-cell} ipython3
---
nbgrader:
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 70, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Calculate and visualize the brightness of all pixels of the image, the
*brightness* of a pixel $(r,g,b)$ being defined as the average
$v=\frac{r+g+b}{3}$:

:::

```{code-cell} ipython3
---
nbgrader:
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

Calculez et visualisez la luminositÃ© de tous les pixels de l'image, la
*luminositÃ©* d'un pixel $(r,g,b)$ Ã©tant dÃ©finie comme la moyenne
$v=\frac{r+g+b}{3}$:

:::

```{code-cell} ipython3
---
nbgrader:
</document>
<translated>

Calculate and visualize the brightness of all pixels of the image, the
*brightness* of a pixel $(r,g,b)$ being defined as the average
$v=\frac{r+g+b}{3}$:

:::

```{code-cell} ipython3
---
nbgrader:
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
  grade: false
  grade_id: cell-4956fa101f9c567c
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
V = (R+G+B)/3

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 71, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
  grade: false
  grade_id: cell-4956fa101f9c567c
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
V = (R+G+B)/3
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
  grade: false
  grade_id: cell-4956fa101f9c567c
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
V = (R+G+B)/3

</document>
<translated>

  grade: false
  grade_id: cell-4956fa101f9c567c
  locked: false
  schema_version: 3
  solution: true
  task: false
---
### BEGIN SOLUTION
V = (R+G+B)/3
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(V, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
---
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 72, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(V, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```


/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(V, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

```{code-cell} ipython3
---
</document>
<translated>

fig = Figure(figsize=(5,5))
ax, axr = fig.subplots(1,2)
ax.imshow(M)
axr.imshow(V, cmap='Greys_r', vmin=0, vmax=255)
fig
### END SOLUTION
```

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6096
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert V.shape == (256, 256)
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 73, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6096
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert V.shape == (256, 256)
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
nbgrader:
  grade: true
  grade_id: cell-841034979ffe6096
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert V.shape == (256, 256)
</document>
<translated>

nbgrader:
  grade: true
  grade_id: cell-841034979ffe6096
  locked: true
  points: 1
  schema_version: 3
  solution: false
  task: false
---
assert V.shape == (256, 256)
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
assert abs(V.mean() - 172.44) < 0.1
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e2", "locked": true, "schema_version": 3, "solution": false}}

Vous venez de transformer l'image en niveaux de gris! Pour que cela
colle au mieux avec notre perception visuelle, il faudrait en fait
utiliser une moyenne lÃ©gÃ¨rement pondÃ©rÃ©e; voir par exemple la
[Wikipedia](https://fr.wikipedia.org/wiki/Niveau_de_gris#Convertir_une_image_couleur_en_niveau_de_gris).

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 74, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
assert abs(V.mean() - 172.44) < 0.1
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e2", "locked": true, "schema_version": 3, "solution": false}}

You have just converted the image to grayscale! So that it
best matches our visual perception, it would actually
be necessary to use a slightly weighted average; see for example the
[Wikipedia](https://fr.wikipedia.org/wiki/Niveau_de_gris#Convertir_une_image_couleur_en_niveau_de_gris).

</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
assert abs(V.mean() - 172.44) < 0.1
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e2", "locked": true, "schema_version": 3, "solution": false}}

Vous venez de transformer l'image en niveaux de gris! Pour que cela
colle au mieux avec notre perception visuelle, il faudrait en fait
utiliser une moyenne lÃ©gÃ¨rement pondÃ©rÃ©e; voir par exemple la
[Wikipedia](https://fr.wikipedia.org/wiki/Niveau_de_gris#Convertir_une_image_couleur_en_niveau_de_gris).

</document>
<translated>

assert abs(V.mean() - 172.44) < 0.1
```

+++ {"nbgrader": {"grade": false, "grade_id": "cell-5d168111627796e2", "locked": true, "schema_version": 3, "solution": false}}

You have just converted the image to grayscale! So that it
best matches our visual perception, it would actually
be necessary to use a slightly weighted average; see for example the
[Wikipedia](https://fr.wikipedia.org/wiki/Niveau_de_gris#Convertir_une_image_couleur_en_niveau_de_gris).

</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-d0fb04b5c7bf1744", "locked": true, "schema_version": 3, "solution": false}}

## Conclusion

Vous avons vu dans cette feuille comment charger une image dans Python
et effectuer quelques manipulations, visualisations et calculs simples
dessus. Cela a Ã©tÃ© l'occasion de mieux comprendre la dÃ©composition
d'une image en couches de couleur.

:::{admonition} Exercice
</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 75, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-d0fb04b5c7bf1744", "locked": true, "schema_version": 3, "solution": false}}

## Conclusion

We have seen in this sheet how to load an image in Python
and perform some manipulations, visualizations and simple calculations
on it. This was the occasion to better understand the decomposition
of an image into layers of color.

:::{admonition} Exercise
</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>
+++ {"nbgrader": {"grade": false, "grade_id": "cell-d0fb04b5c7bf1744", "locked": true, "schema_version": 3, "solution": false}}

## Conclusion

Vous avons vu dans cette feuille comment charger une image dans Python
et effectuer quelques manipulations, visualisations et calculs simples
dessus. Cela a Ã©tÃ© l'occasion de mieux comprendre la dÃ©composition
d'une image en couches de couleur.

:::{admonition} Exercice
</document>
<translated>

+++ {"nbgrader": {"grade": false, "grade_id": "cell-d0fb04b5c7bf1744", "locked": true, "schema_version": 3, "solution": false}}

## Conclusion

We have seen in this sheet how to load an image in Python
and perform some manipulations, visualizations and simple calculations
on it. This was the occasion to better understand the decomposition
of an image into layers of color.

:::{admonition} Exercise
</translated>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a specialized translation assistant proficient in handling various document formats (e.g., LaTeX, Markdown, MyST, Typst, or Jupyter Notebooks).
Your task is to **translate only the natural language content** into **English**, while **preserving the input exactly as-is** â€” including syntax, layout, and errors.

You must treat the input as a **raw source file**, not as a renderable or valid document.
Do **not** alter or correct formatting, layout, or syntax in any way.

## Input format
The document to be translated will be wrapped inside a <document> tag, like this:
<document>
[original document content here]
</document>

---

### ðŸ“‹ Step-by-Step Instructions

**Step 1: Detect Document Type**

Identify the format from:

* Jupyter Notebook (`.ipynb`)
* MyST Markdown (`.md`)
* Typst (`.typ`)
* LaTeX (`.tex`)
* Microsoft Word (`.docx`)

Use file extension, syntax markers, or headers to determine the type.

---

**Step 2: Detect Source Language**

Identify the language of the natural language content (e.g., French, Ukrainian).
If the document is already in English, no translation is needed.

---

**Step 3: Identify Non-Translatable Elements**

Do **not translate** or alter any of the following:

* Code blocks (fenced or indented)
* Inline code
* Mathematical equations (e.g. $x$, \begin{equation})
* Headings, lists, directives (e.g. `:::{note}`)
* YAML front matter or metadata blocks
* HTML, LaTeX, or Typst commands
* Any special syntax (e.g. `{code-cell}`, `nbgrader`, etc.)

---

**Step 4: Translate Only Natural Language**

Translate:

* Descriptive sentences
* Captions and inline explanations
* Instructional comments, where clearly not code

Do **not escape**, fix, or reformat anything. Keep:

* **Line breaks**
* **Spacing**
* **Partial or malformed syntax**
* **Unclosed code blocks**
* **Broken frontmatter**
  Exactly as they are.

If you're unsure whether something is natural language or syntax, **default to leaving it unchanged**.

---

## Output Format Requirements

* Return only the translated content inside a single tag: <output> ... </output>
* **Do NOT** wrap the output in triple backticks (```) or add any language tags like `markdown`, `text`, etc.
* Output must be **raw**, line-accurate, and byte-faithful.

---

### Absolute Do-Nots

* Do not correct broken or unclosed syntax (e.g., fenced code blocks, YAML).
* Do not auto-close any code block that appears unfinished.
* Do not add formatting or beautification.
* Do not escape special characters like `$`, `{}`, `:::` or LaTeX commands.
* Do not add comments like `<!-- continues -->`, ellipses, or summaries.

---

###  Examples

**Input:**
$f$
**Output:**
$f$ (not \$f\$)

**Input:**
:::{tip} Do this
**Output:**
:::{tip} Do this  (not \:::{tip} Do this)

---

### Special Cases

* If the document has **no translatable content**, return it **unchanged** in `<output>`.
* If the document is too long, continue in a new `<output>` block **without any comments or transition markers**.

---

### Begin Translation

1. Analyze the document.
2. Confirm understanding.
3. Perform the translation.
4. Return result wrapped in:

<output>
[translated document here]
</output>

Nothing else.
<document>

Mettez Ã  jour votre rapport, et notamment la section Â« revue de code Â»
pour vÃ©rifier vos utilitaires dans [utilities.py](utilities.py).

:::

Vous pouvez maintenant passer Ã 
l'[extraction d'attributs](3_extraction_d_attributs.md)

</document>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-140 [DEBUG] - 
Chunk 76, contents:
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-141 [DEBUG] - 
<output>
Update your report, and especially the "code review" section
to check your utilities in [utilities.py](utilities.py).

:::

You can now move on to
the [attribute extraction](3_extraction_d_attributs.md)

</output>
/Users/dobbikov/Desktop/stage/clis/prompt_testing_lib/src/lib.rs-99 [DEBUG] - ---Full prompt: 
You are a precision QA agent for document translation.
You will receive two documents:

    <document>: the original chunk of the source document (LaTeX, Markdown, MyST, Typst, Jupyter, etc.)

    <translated>: the translated chunk of the document, where only natural language was meant to be translated into English
 Your Task Has Two Steps:
Step 1: Verification

Carefully compare the <document> and <translated>. Identify all issues where the translation violated the rules below.

You must report:

    Untranslated natural language â€” any part of the original human-readable text that wasnâ€™t translated

    Hallucinated or added content â€” any text that does not exist in the original

    Escaped characters â€” e.g. \$f\$ instead of $f$, \:::{tip} instead of :::{tip}

    Syntax altered â€” e.g. changed indentation, line breaks, added triple backticks, closed or fixed code blocks, changed YAML

    Incorrect or overly literal translation â€” only if it's clearly wrong

Each issue must include:

    A quote of the problematic lines (from both input and output)

    Type of issue (e.g. "Escaped character", "Untranslated")

    A very brief explanation

Step 2: Correction

After reporting all inconsistencies, produce a corrected version of the translated document with the following constraints:

Translate any missing natural language
Restore syntax, line breaks, indentation exactly as in <document> 
Remove hallucinated additions
Unescape $, ::: and LaTeX commands if they were changed
Do not fix or auto-close syntax that is malformed in the original
Do not change formatting or layout of already correct parts
Output Format

Your response must have two clearly separated blocks:

<issues>
[List of problems, grouped and numbered]
</issues>

<output>
[corrected translated document]
</output>

Important reminder: The corrected output must be in the <output> tag !

Do not include triple backticks or language annotations. Return only raw text.
Notes

    If no issues are found, say: No issues detected. and return the <output> unchanged.

    Do not invent missing content. If a translation is ambiguous, leave it untranslated and mark it.
<document>

Mettez Ã  jour votre rapport, et notamment la section Â« revue de code Â»
pour vÃ©rifier vos utilitaires dans [utilities.py](utilities.py).

:::

Vous pouvez maintenant passer Ã 
l'[extraction d'attributs](3_extraction_d_attributs.md)

</document>
<translated>

Update your report, and especially the "code review" section
to check your utilities in [utilities.py](utilities.py).

:::

You can now move on to
the [attribute extraction](3_extraction_d_attributs.md)

</translated>
